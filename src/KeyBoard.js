import React, { Component } from 'react'
import KeyGroup from './KeyGroup.js'
import GuideHand from './GuideHand'

class KeyBoard extends Component {
  constructor (props) {
    super(props)
    this.state = {currentLayer: 'layer1'}
    this.layer1 = [
         ['‡ÆÜ', '‡ÆÖ', '‡Æî'], // leftLittleFingerGroup,
         ['‡Æà', '‡Æá', '‡Æì'],  // leftRingFingerGroup,
         ['‡Æä', '‡Æâ', '‡Æí'], // leftMiddleFingerGroup,
         ['‡Æê', '‡Øç', '‡Æµ'],  // leftIndexFingerGroup1,
         ['‡Æè', '‡Æé', '‡Æô'], // leftIndexFingerGroup2,
     // Right finger groups
         ['‡Æ≥', '‡Æï', '‡Æ≤'],    // rightIndexFingerGroup2,
         ['‡Æ±', '‡Æ™', '‡Æ∞'], // rightIndexFingerGroup1,
         ['‡Æ©', '‡ÆÆ', ','],   // rightMiddleFingerGroup,
         ['‡Æü', '‡Æ§', '.'], // rightRingFingerGroup,
         ['‡Æ£', '‡Æ®', '‡Æ¥'], // rightLittleFingerGroup,
         ['‡Æö', '‡ÆØ'] // rightLittleFingerGroup2
    ]
    this.layer1Names = [
      'left little finger',
      'left ring finger',
      'left middle finger',
      'left index finger',
      'left index finger']
    this.layer2 = [
          ['‡Æ∏',  '‡Øπ',  '‡Ø≥'], // Left little finger group
          ['‡Æ∑', '‡Ø∫', '‡Ø¥'],
          ['‡Æú', '‡Ø∏', '‡Øµ'],
          ['‡Æπ' , '‡ÆÉ', '‡Ø∂'],
          ['‡Æï‡Øç‡Æ∑', 'üåï', '‡Ø∑'],
    
          ['‡Æ∂‡Øç‡Æ∞‡ØÄ', '', '‡Øê'], // Right index finger group 1
          ['*', '"', '<'],
          ['[',  '‡Ø±',  '>'],
          [']', ';', '?'],
          ['{', '\'']
    ]
    this.layer2Names = [
      'right index finger',
      'right index finger',
      'right middle finger',
      'right ring finger',
      'right little finger',
      'right little finger'
    ]
  }
  isItemPresentInArrayOfArray (arrayOfArray = [], elementToFind) { // Return outer array index if element found else returns null
    for (let i = 0; i < arrayOfArray.length; i++) {
      for (let j = 0; j < arrayOfArray[i].length; j++) {
        if (elementToFind === arrayOfArray[i][j]) {
          return i
        }
      }
    }
    return null
  }

  componentWillReceiveProps (nextProps) {
    if (nextProps.pressedKey !== this.props.pressedKey) {
      if (this.isItemPresentInArrayOfArray(this.layer1, nextProps.pressedKey) !== null) {
        this.setState({currentLayer: 'layer1'})
      } else {
        this.setState({currentLayer: 'layer2'})
      }
    }
  }
  componentWillMount () {
  
  }
  render () {
	  // Left finger groups
   
    let renderedKeyGroups = null

    if (this.state.currentLayer === 'layer1') {
      renderedKeyGroups = this.layer1.map((keyGroup, index) => {
        return (
          <td>
            <KeyGroup key={index} pressedKey={this.props.pressedKey} keysInGroup={keyGroup} keyGroupName={this.layer1Names[index]} />
          </td>
        )
      }
        )
    } else {
      renderedKeyGroups = this.layer2.map((keyGroup, key) => {
        return (
          <td>
            <KeyGroup key={keyGroup} pressedKey={this.props.pressedKey} keysInGroup={keyGroup} />
          </td>
        )
      }
      )
    }
    return (
      <div>
        <div>
          <table>
            <tbody>
              {renderedKeyGroups}
            </ tbody>
          </table>
        </ div>
        <div>
          <GuideHand groupIdOfPressedKey={this.layer1Names.concat(this.layer2Names)[this.isItemPresentInArrayOfArray(this.layer1, this.props.pressedKey)]} />
        </ div>
      </ div>
    )
  }
}

export default KeyBoard
